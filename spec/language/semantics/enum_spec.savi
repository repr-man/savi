:enum EnumExample
  :member Integer48 48
  :member Hexadecimal49 0x31
  :member Char50 '2'

:module EnumSpec
  :fun run(test MicroTest)
    array Array(String) = []
    total U64 = 0

    test["can declare a member value as an integer"].pass =
      EnumExample.Integer48.u8 == 48

    test["can declare a member value as a hexadecimal integer"].pass =
      EnumExample.Hexadecimal49.u8 == 49

    test["can declare a member value as a char literal"].pass =
      EnumExample.Char50.u8 == 50

    test["can interpolate into a string with the member name"].pass =
      "\(EnumExample.Integer48)" == "EnumExample.Integer48"

    test["can iterate over each member of the enum"].pass = (
      members Array(EnumExample) = []
      EnumExample.each_enum_member -> (member |
        members << member
      )
      members == [
        EnumExample.Integer48
        EnumExample.Hexadecimal49
        EnumExample.Char50
      ]
    )
