:enum _Error
  :member IntegerTooBig 1
  :member FloatingPointInvalid 2

  :member BugNoTokens 100
  :member BugInitialTokenIsNotDocument 101
  :member BugFixedSizeListIsTooSmall 102
  :member BugASTListNeedsLargerInitSize 103
  :member BugUnexpectedGrammarToken 104
  :member BugInvalidGroupStyleByte 105
  :member BugInvalidString 106
  :member BugInvalidPrefixedString 107
  :member BugInvalidCharacter 108

  :member ToDoTokenKind 200

:struct _Error.Info
  :let at PEG.Token(_Token)
  :let code _Error
  :new (@at, @code)

:struct _Error.List
  :let _list Array(_Error.Info)
  :new (@_list = [])

  :fun ref at(at, code): @_list << _Error.Info.new(at, code)

  :fun has_any: @_list.is_not_empty
  :fun each: @_list.each -> (e | yield e)
